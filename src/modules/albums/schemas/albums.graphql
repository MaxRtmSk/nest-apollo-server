type Album {
    id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}

extend type Query {
    album(id: ID!):Album
    albums(limit: Int, offset: Int):AlbumsResponse
}

extend type Mutation {
    createAlbum(album: CreateAlbum):Album
    updateAlbum(id: ID!, album: UpdateAlbum):Album
    deleteAlbum(id: ID!): DeleteResponse
}

input CreateAlbum {
    name: String
    released: Int
    artistsIds: [ID]
    bandsIds: [ID]
    trackIds: [ID]
    genresIds: [ID]
    image: String
}


input UpdateAlbum {
    name: String
    released: Int
    artistsIds: [ID]
    bandsIds: [ID]
    trackIds: [ID]
    genresIds: [ID]
    image: String
}

type AlbumsResponse {
    total: Int
    offset: Int
    limit: Int
    items: [Album]
}